@model IEnumerable<EMS.Entity.Entities.ArtistInfo>

@{
    ViewData["Title"] = "Index";
    ViewData["Nav"] = "Artists";
}
@section Breadcrumbs{
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="Index">Dashboard</a>
        </li>
        <li class="breadcrumb-item">@ViewData["Nav"]
        </li>
    </ol>
}

<div class="card-header">
            <div class="form-row">
                <div class="col-md-2">
                    <label class="control-label pull-right" justify="right">Artist Name</label>
                </div>
                <div class="col-md-3">
                    <input type="text" class="right text-primary" name="artistName" id="artistName" />
                </div>
                <div class="col-md-2">
                    <a asp-action="Create" class="btn btn-primary">Create New</a>
                </div>
               
            </div>
</div>
<div class="card-body">
    <table class="table table-bordered table-sm dataTable" id="tblDatatable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedBy)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedBy)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID" title="Edit"><i class="fas fa-edit"></i></a> |
                        <a asp-action="Details" asp-route-id="@item.ID" title="Details"><i class="fas fa-info"></i></a> |
                        <a asp-action="Delete" asp-route-id="@item.ID" title="Delete"><i class="fas fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
</div>
@section Scripts {
    <script type="text/javascript">

        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
        $(document).ready(function () {
            $.getJSON("/ArtistInfo/GetArtistByName", function (availableTags) {
                $("#artistName")
                    // don't navigate away from the field on tab when selecting an item
                    .on("keydown", function (event) {
                        if (event.keyCode === $.ui.keyCode.TAB &&
                            $(this).autocomplete("instance").menu.active) {
                            event.preventDefault();
                        }
                    })
                    .autocomplete({
                        minLength: 0,
                        source: function (request, response) {
                            // delegate back to autocomplete, but extract the last term
                            response($.ui.autocomplete.filter(
                                availableTags, extractLast(request.term)));
                        },
                        focus: function () {
                            // prevent value inserted on focus
                            return false;
                        },
                        select: function (event, ui) {
                            var terms = split(this.value);
                            // remove the current input
                            terms.pop();
                            // add the selected item
                            terms.push(ui.item.value);
                            // add placeholder to get the comma-and-space at the end
                            terms.push("");
                            this.value = terms.join(", ");
                            return false;
                        }
                    });
            });
        });

            //$(document).ready(function () {
            //    $.getJSON("/ArtistInfo/GetArtistByName", function (data) {
            //        console.log(data);
            //        $('#artistName').autocomplete({
            //            source: data,
            //            multiple: true
            //        });
            //    });
            //})
    </script>
}